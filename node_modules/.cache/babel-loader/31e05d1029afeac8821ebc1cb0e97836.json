{"ast":null,"code":"import _objectWithoutProperties from \"/home/indrajitauddy/Desktop/registration-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/indrajitauddy/Desktop/registration-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { userConstants } from '../_constants';\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error\n      };\n\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return _objectSpread({}, state, {\n        items: state.items.map(user => user.id === action.id ? _objectSpread({}, user, {\n          deleting: true\n        }) : user)\n      });\n\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter(user => user.id !== action.id)\n      };\n\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return _objectSpread({}, state, {\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const deleting = user.deleting,\n                  userCopy = _objectWithoutProperties(user, [\"deleting\"]); // return copy of user with 'deleteError:[error]' property\n\n\n            return _objectSpread({}, userCopy, {\n              deleteError: action.error\n            });\n          }\n\n          return user;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/indrajitauddy/Desktop/registration-react/src/_reducers/users.reducer.js"],"names":["userConstants","users","state","action","type","GETALL_REQUEST","loading","GETALL_SUCCESS","items","GETALL_FAILURE","error","DELETE_REQUEST","map","user","id","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAa,CAACK,cAAnB;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKN,aAAa,CAACO,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEL,MAAM,CAACF;AADT,OAAP;;AAGF,SAAKD,aAAa,CAACS,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEP,MAAM,CAACO;AADT,OAAP;;AAGF,SAAKV,aAAa,CAACW,cAAnB;AACE;AACA,+BACKT,KADL;AAEEM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IACzBA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAnB,qBACSD,IADT;AACeE,UAAAA,QAAQ,EAAE;AADzB,aAEIF,IAHC;AAFT;;AAQF,SAAKb,aAAa,CAACgB,cAAnB;AACE;AACA,aAAO;AACLR,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYS,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAA9C;AADF,OAAP;;AAGF,SAAKd,aAAa,CAACkB,cAAnB;AACE;AACA,+BACKhB,KADL;AAEEM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IAAI;AAC7B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB;AADyB,kBAEjBC,QAFiB,GAESF,IAFT,CAEjBE,QAFiB;AAAA,kBAEJI,QAFI,4BAESN,IAFT,iBAGzB;;;AACA,qCAAYM,QAAZ;AAAsBC,cAAAA,WAAW,EAAEjB,MAAM,CAACO;AAA1C;AACD;;AAED,iBAAOG,IAAP;AACD,SATM;AAFT;;AAaF;AACE,aAAOX,KAAP;AA5CJ;AA8CD","sourcesContent":["import { userConstants } from '../_constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n    case userConstants.GETALL_FAILURE:\n      return { \n        error: action.error\n      };\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return {\n        ...state,\n        items: state.items.map(user =>\n          user.id === action.id\n            ? { ...user, deleting: true }\n            : user\n        )\n      };\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter(user => user.id !== action.id)\n      };\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return {\n        ...state,\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const { deleting, ...userCopy } = user;\n            // return copy of user with 'deleteError:[error]' property\n            return { ...userCopy, deleteError: action.error };\n          }\n\n          return user;\n        })\n      };\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}