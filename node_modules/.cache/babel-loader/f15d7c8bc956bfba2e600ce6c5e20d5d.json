{"ast":null,"code":"import { authHeader } from '../_helpers';\nexport const productService = {\n  getAllProducts\n};\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {// auto logout if 401 response returned from api\n        //logout();\n        //location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nfunction getAllProducts() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/products`, requestOptions).then(handleResponse);\n}","map":{"version":3,"sources":["/home/indrajitauddy/Desktop/registration-react/src/_services/product.service.js"],"names":["authHeader","productService","getAllProducts","handleResponse","response","text","then","data","JSON","parse","ok","status","error","message","statusText","Promise","reject","requestOptions","method","headers","fetch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA;AAD0B,CAAvB;;AAIP,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBC,IAAhB,CAAqBD,IAAI,IAAI;AAChC,UAAME,IAAI,GAAGF,IAAI,IAAIG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACM,EAAd,EAAkB;AACd,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,CACzB;AACA;AACA;AACH;;AAED,YAAMC,KAAK,GAAIL,IAAI,IAAIA,IAAI,CAACM,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAOL,IAAP;AACH,GAbM,CAAP;AAcH;;AAED,SAASL,cAAT,GAA0B;AACtB,QAAMe,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEnB,UAAU;AAFA,GAAvB;AAKA,SAAOoB,KAAK,CAAE,gCAAF,EAAmCH,cAAnC,CAAL,CAAwDX,IAAxD,CAA6DH,cAA7D,CAAP;AACH","sourcesContent":["import { authHeader } from '../_helpers';\n\nexport const productService = {\n    getAllProducts\n};\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                //logout();\n                //location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}\n\nfunction getAllProducts() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`http://localhost:8000/products`, requestOptions).then(handleResponse);\n}"]},"metadata":{},"sourceType":"module"}